# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountEntity {
  accountId: ID!
  address: String
  createdAt: DateTime!
  driver: DriverEntity
  driverId: ID!
  email: String!
  fullName: String!
  orders: [OrderEntity!]!
  password: String!
  phone: String!
  role: String!
  transactions: [TransactionEntity!]
  updatedAt: DateTime!
  username: String!
  walletAmount: Float!
}

type AdditionalServiceEntity {
  additionalServiceId: ID!
  createdAt: String!
  description: String!
  forTransportType: String
  isActive: Boolean!
  name: String!
  orders: OrderAdditionalServiceEntity!
  price: Float!
  updatedAt: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DriverEntity {
  account: AccountEntity
  createdAt: DateTime!
  currentProvince: String!
  driverId: ID!
  routes: [RouteEntity!]!
  status: String!
  updatedAt: DateTime!
}

input FindManySuitableAdditionalServiceInputData {
  transportType: String!
}

input FindManySuitableTransportServiceInputData {
  fromProvince: String!
  toProvince: String!
}

input FindOneUserOrderInputData {
  params: FindOneUserOrderInputParams!
}

input FindOneUserOrderInputParams {
  orderId: String!
}

type FishQualificationEntity {
  createdAt: DateTime!
  fish: OrderFishEntity!
  fishId: ID!
  fishQualificationId: ID!
  imageUrl: String!
  updatedAt: DateTime!
}

type InitReportOutput {
  averageOrderRating: Float!
  numberOfDrivers: Int!
  numberOfOrders: Int!
  numberOfTransportServices: Int!
  totalRevenue: Float!
}

type OrderAdditionalServiceEntity {
  additionalService: AdditionalServiceEntity
  additionalServiceId: ID!
  createdAt: DateTime!
  order: OrderEntity
  orderAdditionalServiceId: ID!
  orderId: ID!
  updatedAt: DateTime!
}

type OrderEntity {
  account: AccountEntity!
  accountId: ID!
  createdAt: DateTime!
  feedBackContent: String
  feedBackStars: Float
  fromAddress: String!
  fromProvince: String!
  hasCompletedFirstDelivery: Boolean
  notes: String
  orderId: ID!
  orderStatus: String!
  orderedFish: [OrderFishEntity!]
  paymentMethod: String!
  reasonToCancel: String
  receiverName: String!
  receiverPhone: String!
  routeStops: [RouteStopEntity!]
  selectedAdditionalService: [OrderAdditionalServiceEntity!]
  servicePricingType: String!
  toAddress: String!
  toProvince: String!
  totalPrice: Float!
  transactions: [TransactionEntity!]
  transportService: TransportServiceEntity!
  transportServiceId: ID!
  updatedAt: DateTime!
}

type OrderFishEntity {
  ageInMonth: Float!
  createdAt: DateTime!
  description: String
  fishImageUrl: String
  gender: String!
  length: Float!
  name: String
  order: OrderEntity!
  orderFishId: ID!
  orderId: ID!
  qualifications: [FishQualificationEntity!]
  species: String!
  updatedAt: DateTime!
  weight: Float!
}

type Query {
  findAllAccount: [AccountEntity!]!
  findAllAdditionalService: [AdditionalServiceEntity!]!
  findAllOrder: [OrderEntity!]!
  findAllTransportService: [TransportServiceEntity!]!
  findManyAssignedRoute: [RouteEntity!]!
  findManyAvailableDriver: [DriverEntity!]!
  findManyCompletedRoute: [RouteEntity!]!
  findManyProcessingOrder: [OrderEntity!]!
  findManyRoutes: [RouteEntity!]!
  findManySuitableAdditionalService(data: FindManySuitableAdditionalServiceInputData!): [AdditionalServiceEntity!]!
  findManySuitableTransportService(data: FindManySuitableTransportServiceInputData!): [TransportServiceEntity!]!
  findManyTransaction: [TransactionEntity!]!
  findManyUserOrder: [OrderEntity!]!
  findOneAccount: AccountEntity!
  findOneDeliveringRoute: RouteEntity!
  findOneUserOrder(data: FindOneUserOrderInputData!): [OrderEntity!]!
  init: AccountEntity!
  initReport: InitReportOutput!
}

type RouteEntity {
  createdAt: DateTime!
  deliveryStartDate: DateTime
  driver: DriverEntity!
  driverId: ID!
  notes: String
  numberOfOrders: Int!
  routeId: ID!
  routeStops: [RouteStopEntity!]
  status: String!
  updatedAt: DateTime!
}

type RouteStopEntity {
  address: String!
  createdAt: DateTime!
  order: OrderEntity!
  orderId: ID!
  route: RouteEntity!
  routeId: ID!
  routeStopId: ID!
  status: String!
  stopType: String!
  updatedAt: DateTime!
}

type TransactionEntity {
  account: AccountEntity!
  accountId: String!
  amount: Float!
  createdAt: DateTime!
  order: OrderEntity!
  orderId: String
  status: String!
  transactionId: ID!
  type: String!
  updatedAt: DateTime!
}

type TransportServiceEntity {
  createdAt: DateTime!
  description: String!
  isActive: Boolean!
  name: String!
  orders: OrderEntity!
  pricePerAmount: Float!
  pricePerKg: Float!
  pricePerKm: Float!
  transportServiceId: ID!
  type: String!
  updatedAt: DateTime!
}